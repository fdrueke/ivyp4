<!-- 
Copyright 2011 Felix Drueke

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

	
<project name="ivyp4resolver" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="lib.dir" value="${basedir}/lib" />

  <property name="src.dir" value="${basedir}/src" />

  <property name="test.dir" location="test" />
  <property name="test.conf.dir" location="${test.dir}/conf" />
  <property name="test.data.dir" location="${test.dir}/data" />

  <property name="build.dir" value="${basedir}/build" />
  <property name="dist.dir" value="${build.dir}/dist" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="junit.report.dir" location="${build.dir}/junit" />

  
  <ivy:settings file="ivysettings.xml" />
  <property file="build.properties" />

  <!-- override this if you intend to publish a new version -->
  <property name="version" value="0" />


	<target name="resolvedeps">
		<ivy:resolve />

		<!-- paths used for compilation -->
		  <ivy:cachepath pathid="compile.classpath" conf="build"  />
			
		  <!-- classpath used when compiling and running tests -->
		  <ivy:cachepath pathid="test.classpath" conf="unittest"  />

		  <!-- classpath used when running findbugs -->
		  <ivy:cachepath pathid="findbugs.classpath" conf="findbugs"  />
	</target>
	

  <target name="clean" description="">
    <delete dir="${build.dir}" />
  </target>

  <target name="compile" depends="resolvedeps,compile-source, compile-test" />

  <target name="compile-source">
    <mkdir dir="${classes.dir}" />
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="compile.classpath" debug="true" source="1.5" target="1.5" />
  </target>

  <target name="compile-test" depends="compile-source">
    <mkdir dir="${classes.dir}" />
    <javac srcdir="${test.dir}" destdir="${classes.dir}" classpathref="test.classpath" debug="true"/>
  </target>

  <target name="test" depends="compile" description="Run the unit tests">
    <delete dir="${junit.report.dir}" />
    <mkdir dir="${junit.report.dir}" />

    <property name="junit.includes" value="**/*Test.java" />
    <property name="junit.excludes" value="nothing.by.default" />

    <junit printsummary="yes" failureproperty="testfailed" showoutput="true" fork="true">
      <classpath refid="test-classpath" />
      <formatter type="xml" usefile="true" />
      <batchtest todir="${junit.report.dir}">
        <fileset dir="${test.java.dir}" includes="${junit.includes}" excludes="${junit.excludes}" />
      </batchtest>
    </junit>

    <junitreport todir="${junit.report.dir}">
      <fileset dir="${junit.report.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="noframes" todir="${junit.report.dir}" />
    </junitreport>

    <fail if="testfailed" message="Some test(s) failed. See '${junit.report.dir}' for details." />
  </target>

  <target name="jar" depends="compile" description="Build a jar file for this project">
    <tstamp>
      <format property="BUILD-DATETIME" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
    <mkdir dir="${dist.dir}" />
    <echo message="Generating ${dist.dir}/${ant.project.name}.jar with version ${version}" />
    <jar destfile="${dist.dir}/${ant.project.name}-${version}.jar" update="true">
      <fileset dir="${classes.dir}">
        <exclude name="**/*Test*" />
        <exclude name="**/test*" />
      </fileset>
      <manifest>
        <attribute name="Build-Version" value="${version}" />
        <attribute name="Build-DateTime" value="${BUILD-DATETIME}" />
      </manifest>
    </jar>
  </target>

  <target name="build-jar" depends="jar" />

  <target name="build" depends="build-jar" />

  <target name="build-dist" depends="build-bin, build-src" />

  <!-- builds the binary zip file -->
  <target name="build-bin" depends="build-jar">
    <tar destfile="${dist.dir}/${ant.project.name}-${version}-bin.tgz" compression="gzip">
      <zipfileset dir="${dist.dir}" includes="${ant.project.name}.jar" prefix="${ant.project.name}-${version}" />
      <zipfileset dir="${basedir}" includes="*.txt" excludes="TODO.txt" prefix="${ant.project.name}-${version}" />
      <tarfileset refid="dependencies" prefix="${ant.project.name}-${version}/lib" />
    </tar>
  </target>

  <!-- builds the source zip file -->
  <target name="build-src" depends="build-jar">
    <tar destfile="${dist.dir}/${ant.project.name}-${version}-src.tgz" compression="gzip">
      <zipfileset dir="${basedir}" excludes="build/**/*, build, .*, build.properties, ivysettings.xml, .settings/**/*, deb.xml, test/conf/test.properties" prefix="${ant.project.name}-${version}" />
    </tar>
  </target>

	<target name="findbugs" depends="resolvedeps">
		<ivy:retrieve organisation="edu.umd.cs" module="findbugs" pattern="lib-findbugs/[artifact].[ext]" sync="true" inline="true" log="download-only" type="jar,report" />
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="lib-findbugs/findbugs-ant.jar" />
		 <path id="local.findbugs.classpath">
		            <fileset dir="lib-findbugs">
		                <include name="*.jar" />
		            </fileset>
		</path> 
		<pathconvert property="local.findbugs.classpath" refid="local.findbugs.classpath" />
		
		<findbugs classpath="${local.findbugs.classpath}" pluginList=""
		              output="html"
		              outputFile="ivyp4resolver-findbugs-results.html" >
		      <sourcePath path="${basedir}/src" />
		      <class location="${dist.dir}/${ant.project.name}.jar" />
			  <auxClasspath>
	        	<path refid="compile.classpath" />
			  </auxClasspath>
		 </findbugs>
  	</target>

</project>
